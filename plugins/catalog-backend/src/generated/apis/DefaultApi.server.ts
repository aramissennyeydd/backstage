/*
 * Copyright 2024 The Backstage Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// ******************************************************************
// * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. *
// ******************************************************************
import type {
  AnalyzeLocationRequest,
  AnalyzeLocationResponse,
  CreateLocation201Response,
  CreateLocationRequest,
  EntitiesBatchResponse,
  EntitiesQueryResponse,
  Entity,
  EntityAncestryResponse,
  EntityFacetsResponse,
  GetEntitiesByRefsRequest,
  GetLocations200ResponseInner,
  Location,
  RefreshEntityRequest,
  ValidateEntityRequest,
} from '@backstage/catalog-client';

/**
 * no description
 */

export type EndpointMap = {
  '#post|/analyze-location': {
    path: {};
    query: {};
    body: AnalyzeLocationRequest;
    response: AnalyzeLocationResponse;
  };

  '#post|/locations': {
    path: {};
    query: {
      dryRun?: string;
    };
    body: CreateLocationRequest;
    response: CreateLocation201Response;
  };

  '#_delete|/entities/by-uid/{uid}': {
    path: {
      uid: string;
    };
    query: {};
    response: void;
  };

  '#_delete|/locations/{id}': {
    path: {
      id: string;
    };
    query: {};
    response: void;
  };

  '#get|/entities': {
    path: {};
    query: {
      fields?: Array<string>;
      limit?: number;
      filter?: Array<string>;
      offset?: number;
      after?: string;
      order?: Array<string>;
    };
    response: Array<Entity>;
  };

  '#get|/entities/by-query': {
    path: {};
    query: {
      fields?: Array<string>;
      limit?: number;
      orderField?: Array<string>;
      cursor?: string;
      filter?: Array<string>;
      fullTextFilterTerm?: string;
      fullTextFilterFields?: Array<string>;
    };
    response: EntitiesQueryResponse;
  };

  '#post|/entities/by-refs': {
    path: {};
    query: {};
    body: GetEntitiesByRefsRequest;
    response: EntitiesBatchResponse;
  };

  '#get|/entities/by-name/{kind}/{namespace}/{name}/ancestry': {
    path: {
      kind: string;
      namespace: string;
      name: string;
    };
    query: {};
    response: EntityAncestryResponse;
  };

  '#get|/entities/by-name/{kind}/{namespace}/{name}': {
    path: {
      kind: string;
      namespace: string;
      name: string;
    };
    query: {};
    response: Entity;
  };

  '#get|/entities/by-uid/{uid}': {
    path: {
      uid: string;
    };
    query: {};
    response: Entity;
  };

  '#get|/entity-facets': {
    path: {};
    query: {
      facet: Array<string>;
      filter?: Array<string>;
    };
    response: EntityFacetsResponse;
  };

  '#get|/locations/{id}': {
    path: {
      id: string;
    };
    query: {};
    response: Location;
  };

  '#get|/locations/by-entity/{kind}/{namespace}/{name}': {
    path: {
      kind: string;
      namespace: string;
      name: string;
    };
    query: {};
    response: Location;
  };

  '#get|/locations': {
    path: {};
    query: {};
    response: Array<GetLocations200ResponseInner>;
  };

  '#post|/refresh': {
    path: {};
    query: {};
    body: RefreshEntityRequest;
    response: void;
  };

  '#post|/validate-entity': {
    path: {};
    query: {};
    body: ValidateEntityRequest;
    response: void;
  };
};
